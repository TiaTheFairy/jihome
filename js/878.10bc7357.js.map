{"version":3,"file":"js/878.10bc7357.js","mappings":"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","sources":["webpack://jihome_front/./src/components/pages/page_hollow/HollowNew.vue","webpack://jihome_front/src/components/pages/page_hollow/HollowNew.vue","webpack://jihome_front/./src/components/pages/page_hollow/HollowNew.vue?6e78","webpack://jihome_front/./src/components/pages/page_hollow/HollowNew.vue?aeac"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',[_c('el-card',{staticClass:\"card\",attrs:{\"shadow\":\"hover\"}},[_c('el-divider',{staticClass:\"divider\",attrs:{\"content-position\":\"right\"},on:{\"click\":_vm.backHollowList}},[_c('div',{staticClass:\"back\"},[_c('el-image',{staticClass:\"backIcon\",attrs:{\"src\":require('@/../public/assets/return.png')}}),_c('span',{staticClass:\"backWord\"},[_vm._v(_vm._s(_vm.$t('Hollow.NewReturn')))])],1)]),_c('div',{staticClass:\"new\"},[_c('div',{staticClass:\"detail\"},[_c('el-input',{staticClass:\"inputBox\",attrs:{\"placeholder\":this.$t('Hollow.NewDetail'),\"type\":\"textarea\",\"resize\":\"none\",\"rows\":\"3\"},model:{value:(_vm.detail),callback:function ($$v) {_vm.detail=$$v},expression:\"detail\"}})],1),_c('div',{staticClass:\"uploadPic\"},_vm._l((_vm.picture),function(item){return _c('div',{key:item.id,staticClass:\"pictureList\"},[_c('div',{staticClass:\"pictureItem\"},[_c('el-upload',{staticClass:\"uploader\",attrs:{\"action\":\"server.default.uploadImg\",\"show-file-list\":false,\"http-request\":_vm.uploadPicture,\"before-upload\":_vm.beforePictureUpload}},[(item.link)?_c('img',{staticClass:\"uploadImage\",attrs:{\"src\":item.link}}):_c('i',{staticClass:\"el-icon-plus uploadIcon\"}),(item.link)?_c('i',{staticClass:\"el-icon-close removeIcon\",on:{\"click\":function($event){$event.stopPropagation();return _vm.removePicture(item.id)}}}):_vm._e()])],1)])}),0),_c('div',{staticClass:\"nick\"},[_c('el-checkbox',{model:{value:(_vm.isNick),callback:function ($$v) {_vm.isNick=$$v},expression:\"isNick\"}},[_vm._v(_vm._s(_vm.$t('Hollow.NewNick')))])],1),_c('div',{staticClass:\"buttons\"},[_c('el-button',{staticClass:\"button\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.submit}},[_vm._v(_vm._s(_vm.$t('Hollow.NewConfirm')))])],1)])],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div>\r\n      <el-card shadow='hover' class='card'>\r\n        <el-divider class='divider' content-position=\"right\" @click='backHollowList'>\r\n          <div class='back'>\r\n            <el-image class='backIcon' :src=\"require('@/../public/assets/return.png')\"></el-image>\r\n            <span class='backWord'>{{$t('Hollow.NewReturn')}}</span>\r\n          </div>\r\n        </el-divider>\r\n\r\n        <div class='new'>\r\n          <div class='detail'>\r\n            <el-input class='inputBox' :placeholder=\"this.$t('Hollow.NewDetail')\" type=\"textarea\" resize='none'\r\n              v-model='detail' rows='3'></el-input>\r\n          </div>\r\n\r\n          <div class='uploadPic'>\r\n            <div class='pictureList' v-for='item in picture' v-bind:key='item.id'>\r\n              <div class='pictureItem'>\r\n                <el-upload class=\"uploader\" action=\"server.default.uploadImg\" :show-file-list=\"false\"\r\n                  :http-request=\"uploadPicture\" :before-upload=\"beforePictureUpload\">\r\n                  <img v-if='item.link' :src='item.link' class=\"uploadImage\" />\r\n                  <i v-else class=\"el-icon-plus uploadIcon\"></i>\r\n                  <i v-if='item.link' class='el-icon-close removeIcon' @click.stop='removePicture(item.id)'></i>\r\n                </el-upload>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class='nick'>\r\n            <el-checkbox v-model=\"isNick\">{{$t('Hollow.NewNick')}}</el-checkbox>\r\n          </div>\r\n\r\n          <div class='buttons'>\r\n            <el-button class='button' type='primary' @click='submit'>{{$t('Hollow.NewConfirm')}}</el-button>\r\n          </div>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie'\r\nimport * as server from '../../../server.js'\r\nimport { customAlphabet } from 'nanoid';\r\nconst nanoid = customAlphabet('1234567890', 9);\r\n\r\nexport default {\r\n  name: 'hollow-new',\r\n  data () {\r\n    return {\r\n      detail: '',\r\n      isNick: false,\r\n      picture: [{ id: 0, link: null }],\r\n      pictureRaw: [],\r\n      idCount: 0\r\n    }\r\n  },\r\n  methods: {\r\n    backHollowList () {\r\n      this.$bus.$emit('showHollowList')\r\n    },\r\n    submit () {\r\n      if (this.detail.length < 10 || this.detail.length > 300) {\r\n        this.alert(this.$t('Hollow.NewInputLengthBad'), this.$t('System.Warning'));\r\n      }\r\n      else {\r\n        const loadingInstance = this.loading();\r\n        for (let i in this.picture) {\r\n          if (this.picture[i].link != null) {\r\n            this.pictureRaw.push(this.picture[i].link.substr(this.picture[i].link.indexOf('/img')))\r\n          }\r\n        }\r\n\r\n        axios({\r\n          method: 'post',\r\n          url: server.default.postHollow,\r\n          data: new URLSearchParams({\r\n            'cookie': Cookies.get('loginCookie'),\r\n            'content': this.detail,\r\n            'isNick': this.isNick ? 1 : 0,\r\n            'postid': nanoid(),\r\n            'picture': this.pictureRaw\r\n          })\r\n        }).then((response) => {\r\n          loadingInstance.close();\r\n          if (response.status != 200) {\r\n            this.alert(this.$t('System.NetworkIssue'), this.$t('System.Error'))\r\n          }\r\n          else {\r\n            if (response.data == 'HOLLOW_POSTID_TAKEN') {\r\n              this.submit();\r\n              return;\r\n            }\r\n            else if (response.data.status == 'HOLLOW_POST_COMPLETE') {\r\n              this.$bus.$emit('refreshHollowList');\r\n              this.alert(this.$t('Hollow.NewCompleteJump'), this.$t('Hollow.NewComplete'), () => {\r\n                this.$bus.$emit('showHollowDetail', response.data.postid);\r\n              })\r\n            }\r\n          }\r\n        })\r\n      }\r\n    },\r\n    uploadPicture (file) {\r\n      const loadingInstance = this.loading();\r\n\r\n      let formData = new FormData();\r\n      formData.append(\"file\", file.file);\r\n      formData.append(\"type\", \"hollow\");\r\n      formData.append(\"cookie\", Cookies.get('loginAs'))\r\n\r\n      axios({\r\n        method: \"post\",\r\n        url: server.default.uploadImg,\r\n        data: formData\r\n      }).then((response) => {\r\n        loadingInstance.close();\r\n        if (response.status != 200) {\r\n          this.alert(this.$t('System.NetworkIssue'), this.$t('System.Error'))\r\n        }\r\n        else {\r\n          if (response.data.status == 'IMAGE_UPLOAD_SUCCESS') {\r\n            this.picture.splice(this.picture.length - 1, 1);\r\n            this.picture.push({\r\n              id: this.idCount,\r\n              link: server.default.server + response.data.id\r\n            });\r\n            this.idCount++;\r\n            if (this.picture.length < 3) {\r\n              this.picture.push({\r\n                id: this.idCount,\r\n                link: null\r\n              })\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n    beforePictureUpload (file) {\r\n      if (this.picture.length > 3) {\r\n        return false;\r\n      }\r\n      else if (file.type != 'image/jpeg' && file.type != 'image/png') {\r\n        this.alert(this.$t('Hollow.PictureWrongType'), this.$t('System.Warning'));\r\n        return false;\r\n      }\r\n      else if (file.size / 1024 / 1024 > 2) {\r\n        this.alert(this.$t('Hollow.PictureTooLarge'), this.$t('System.Warning'));\r\n        return false;\r\n      }\r\n      else {\r\n        return true;\r\n      }\r\n    },\r\n    removePicture (id) {\r\n      let isAnyEmpty = false;\r\n      let target = '';\r\n      for (let i in this.picture) {\r\n        if (this.picture[i].id == id) {\r\n          target = this.picture[i].link;\r\n          this.picture.splice(i, 1);\r\n        }\r\n        if (this.picture[i]) {\r\n          if (this.picture[i].link == null) {\r\n            isAnyEmpty = true;\r\n          }\r\n        }\r\n      }\r\n      if (!isAnyEmpty) {\r\n        this.picture.push({\r\n          id: this.idCount,\r\n          link: null\r\n        })\r\n      }\r\n      const loadingInstance = this.loading();\r\n      axios({\r\n        method: \"post\",\r\n        url: server.default.removeImg,\r\n        data: new URLSearchParams({\r\n          target: target,\r\n        })\r\n      }).then((response) => {\r\n        loadingInstance.close();\r\n        if (response.status != 200) {\r\n          this.alert(this.$t('System.NetworkIssue'), this.$t('System.Error'))\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  margin-left: 5%;\r\n  width: 90%;\r\n  border-radius: 20px;\r\n}\r\n.new {\r\n  width: 90%;\r\n  margin-left: 5%;\r\n}\r\n.divider {\r\n  width: 90%;\r\n  margin-left: 5%;\r\n}\r\n.back {\r\n  cursor: pointer;\r\n}\r\n.backIcon {\r\n  color: rgb(252, 62, 5);\r\n  width: 20px;\r\n}\r\n.backWord {\r\n  font-size: 18px;\r\n  margin-left: 10px;\r\n}\r\n.inputBox {\r\n  margin-top: 30px;\r\n  font-size: 20px;\r\n}\r\n.inputBox ::v-deep textarea {\r\n  border-radius: 15px;\r\n}\r\n.uploadPic {\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  text-align: left;\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n.uploadPic .pictureItem {\r\n  margin-right: 15px;\r\n}\r\n.uploadPic .uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.uploadPic .uploader .el-upload:hover {\r\n  border-color: #409eff;\r\n}\r\n.uploadPic .uploader .uploadIcon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n  border: 1px solid gray;\r\n  border-radius: 15px;\r\n}\r\n.uploadPic .uploader .removeIcon {\r\n  font-size: 28px;\r\n  font-weight: bolder;\r\n  position: relative;\r\n  top: -178px;\r\n  left: 75px;\r\n}\r\n.uploadPic .uploader .uploadImage {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n  border: 1px solid gray;\r\n  border-radius: 15px;\r\n}\r\n.nick {\r\n  text-align: left;\r\n  margin-bottom: 30px;\r\n}\r\n.nick ::v-deep .el-checkbox__label {\r\n  font-size: 20px;\r\n}\r\n.button {\r\n  font-size: 20px;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  border-radius: 15px;\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HollowNew.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HollowNew.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HollowNew.vue?vue&type=template&id=cb20c616&scoped=true&\"\nimport script from \"./HollowNew.vue?vue&type=script&lang=js&\"\nexport * from \"./HollowNew.vue?vue&type=script&lang=js&\"\nimport style0 from \"./HollowNew.vue?vue&type=style&index=0&id=cb20c616&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"cb20c616\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","on","backHollowList","require","_v","_s","$t","model","value","detail","callback","$$v","expression","_l","picture","item","key","id","uploadPicture","beforePictureUpload","link","$event","stopPropagation","removePicture","_e","isNick","submit","staticRenderFns","nanoid","customAlphabet","name","data","pictureRaw","idCount","methods","$bus","$emit","length","alert","loadingInstance","loading","i","push","substr","indexOf","axios","method","url","server","URLSearchParams","Cookies","then","response","close","status","postid","file","formData","FormData","append","splice","type","size","isAnyEmpty","target","component"],"sourceRoot":""}